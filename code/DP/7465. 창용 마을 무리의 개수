import java.util.*;
import java.io.*;

class Solution
{
	 static int T;
    static int N,M;
    static ArrayList<Integer>[] list;
    static int count;
    static boolean visited[];
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        int T = Integer.parseInt(br.readLine());

        for (int tc = 1; tc <= T; tc++) {
        	st = new StringTokenizer(br.readLine());
        	N = Integer.parseInt(st.nextToken());
        	M = Integer.parseInt(st.nextToken());
        	count = 0;
        	list = new ArrayList[N+1];
        	visited = new boolean[N+1];
        	for (int i = 1; i <= N; i++) {
        	    list[i] = new ArrayList<>();
        	}
        	
        	for(int i = 0; i< M; i++ ) {
        		
        		st = new StringTokenizer(br.readLine());
        		int a = Integer.parseInt(st.nextToken());
        		int b = Integer.parseInt(st.nextToken());
        		list[a].add(b);
        		list[b].add(a);
        		
        	}

            for (int i = 1; i <= N; i++) {
                if (!visited[i]) {
                    dfs(i);
                    count++;
                }
            }

            System.out.println("#" + tc + " " + count);
        }
    }

    static void dfs(int start) {
        visited[start] = true;
        for (int next : list[start]) {
            if (!visited[next]) 
            	dfs(next);
        }
    }
}
